[{"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\index.js":"1","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\reportWebVitals.js":"2","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\App.js":"3","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Login.js":"4","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Error.js":"5","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Checkout.js":"6","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosFiscales.js":"7","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosPersonales.js":"8","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosBancarios.js":"9","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Botones.js":"10","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\funciones\\validarDatos.js":"11","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Copyright.js":"12","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Resumen.js":"13","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Modal.js":"14","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\ObrasAdmin.js":"15","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\TablaObrasAdmin.js":"16","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\funciones\\validarObrasAdmin.js":"17"},{"size":478,"mtime":1608240333951,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":871,"mtime":1609276519693,"results":"21","hashOfConfig":"19"},{"size":4957,"mtime":1609268859984,"results":"22","hashOfConfig":"19"},{"size":179,"mtime":1608603586247,"results":"23","hashOfConfig":"19"},{"size":8324,"mtime":1609274906521,"results":"24","hashOfConfig":"19"},{"size":7889,"mtime":1609171981418,"results":"25","hashOfConfig":"19"},{"size":4175,"mtime":1609172021094,"results":"26","hashOfConfig":"19"},{"size":2378,"mtime":1609171887862,"results":"27","hashOfConfig":"19"},{"size":975,"mtime":1608686408195,"results":"28","hashOfConfig":"19"},{"size":4205,"mtime":1609270002436,"results":"29","hashOfConfig":"19"},{"size":474,"mtime":1608687037193,"results":"30","hashOfConfig":"19"},{"size":3713,"mtime":1608678247568,"results":"31","hashOfConfig":"19"},{"size":989,"mtime":1609172071762,"results":"32","hashOfConfig":"19"},{"size":19394,"mtime":1609276502114,"results":"33","hashOfConfig":"19"},{"size":6308,"mtime":1609275536154,"results":"34","hashOfConfig":"19"},{"size":255,"mtime":1609270458593,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lvznef",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\index.js",[],["74","75"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\reportWebVitals.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\App.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Login.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Error.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Checkout.js",["76"],"import { Fragment, useState, useEffect } from 'react';\r\nimport { makeStyles, CssBaseline, Paper, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\r\nimport Axios from 'axios'\r\nimport DatosFiscales from './DatosFiscales';\r\nimport DatosBancarios from './DatosBancarios';\r\nimport DatosPersonales from './DatosPersonales';\r\nimport Botones from './Botones'\r\nimport Error from './Error'\r\nimport Copyright from './Copyright'\r\nimport Resumen from './Resumen'\r\nimport Modal from './Modal'\r\nimport {\r\n  validarVaciosDatosFiscales,\r\n  validarVaciosDatosPersonales,\r\n  validarVaciosDatosBancarios,\r\n  verificarFormatoDatosFiscales,\r\n  verificarFormatoDatosPersonales,\r\n  verificarFormatoDatosBancarios\r\n} from '../funciones/validarDatos'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  }\r\n}));\r\n\r\nconst steps = ['Datos Fiscales', 'Datos Personales', 'Datos Bancarios', 'Resumen'];\r\n\r\nexport default function Checkout({ guardarNumeroComponente }) {    \r\n  const classes = useStyles();\r\n\r\n  const [ activeStep, setActiveStep ] = useState(0);\r\n\r\n  const [ error, guardarError ] = useState({\r\n    bandError: false,\r\n    mensajeError: ''\r\n  })\r\n  \r\n  const [ erroresdatos, guardarErroresDatos ] = useState({\r\n    errorRfc: false,\r\n    errorCp: false,\r\n    errorColonia: false,\r\n    errorCiudad: false,\r\n    errorEstado: false,\r\n    errorCorreo: false,\r\n    errorNombreContacto: false,\r\n    errorTelefonoFijo: false,\r\n    errorTelefonoMovil: false,\r\n    errorNumeroClave: false,\r\n    errorCuenta: false\r\n  })  \r\n  \r\n  const [ banddatosapi, guardarBandDatosApi ] = useState(false)\r\n  \r\n  const [openmodal, setOpenModal] = useState(false);\r\n\r\n  const [ datos, guardarDatos ] = useState({\r\n    nombreMoralFisica: '',\r\n    rfc: '',\r\n    direccionFiscal: '',\r\n    direccionOficina: '',\r\n    calleReferencia1: '',\r\n    calleReferencia2: '',\r\n    cp: '',\r\n    colonia: '',\r\n    ciudad: '',\r\n    estado: '',\r\n    correo: '',\r\n    password: '',\r\n    nombreContacto: '',\r\n    telefonoFijo: '',\r\n    telefonoMovil: '',\r\n    numeroClave: '',\r\n    cuenta: '',\r\n    razonSocial: ''\r\n  })\r\n\r\n  const { \r\n    errorRfc,\r\n    errorCp,\r\n    errorColonia,\r\n    errorCiudad,\r\n    errorEstado,\r\n    errorCorreo,\r\n    errorNombreContacto,\r\n    errorTelefonoFijo,\r\n    errorTelefonoMovil,\r\n    errorNumeroClave,\r\n    errorCuenta\r\n  } = erroresdatos\r\n\r\n  const { bandError, mensajeError } = error\r\n\r\n  const funcGuardarError = (band, mensaje) => {\r\n    guardarError({\r\n      bandError: band,\r\n      mensajeError: mensaje\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const consultarAPI = async () => {\r\n      if(banddatosapi){\r\n        const { nombreMoralFisica, rfc, direccionFiscal, direccionOficina } = datos\r\n        const { calleReferencia1, calleReferencia2, cp, colonia } = datos\r\n        const { ciudad, estado } = datos\r\n        const { correo, password, nombreContacto, telefonoFijo, telefonoMovil} = datos        \r\n        const { numeroClave, cuenta, razonSocial } = datos\r\n        \r\n        const resultado = await Axios.post('https://apicotizacion.herokuapp.com/api/proveedores', {\r\n          nombre_empresa: nombreMoralFisica,\r\n          rfc: rfc,\r\n          direccion_fiscal: direccionFiscal,\r\n          direccion_oficina: direccionOficina,\r\n          calle_referencia1: calleReferencia1,\r\n          calle_referencia2: calleReferencia2,\r\n          codigo_postal: cp,\r\n          colonia: colonia,\r\n          ciudad: ciudad,\r\n          estado: estado,\r\n          correo: correo,\r\n          nombre: nombreContacto,   \r\n          telefono_fijo: telefonoFijo,\r\n          telefono_movil: telefonoMovil,\r\n          numero_clave: numeroClave,\r\n          cuenta: cuenta,\r\n          razon_social: razonSocial,\r\n          password: password\r\n        })\r\n\r\n        let bandera = resultado.data.Error\r\n\r\n        if(bandera === undefined){\r\n          guardarNumeroComponente(1)\r\n        }else{\r\n          guardarBandDatosApi(false)\r\n          alert(bandera)\r\n        }\r\n      }\r\n    }\r\n    consultarAPI()\r\n  }, [banddatosapi])\r\n  \r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <DatosFiscales\r\n          datos={datos}\r\n          guardarDatos={guardarDatos}\r\n          guardarErroresDatos={guardarErroresDatos}\r\n          erroresdatos={erroresdatos}                \r\n        />;\r\n      case 1:             \r\n        return <DatosPersonales\r\n          datos={datos}\r\n          guardarDatos={guardarDatos}\r\n          guardarErroresDatos={guardarErroresDatos}\r\n          erroresdatos={erroresdatos}     \r\n        />;\r\n      case 2:\r\n        return <DatosBancarios\r\n          datos={datos}\r\n          guardarDatos={guardarDatos}\r\n          guardarErroresDatos={guardarErroresDatos}\r\n          erroresdatos={erroresdatos}          \r\n        />;\r\n      case 3:\r\n        return <Resumen\r\n          datos={datos}\r\n        />\r\n      case 4:\r\n        return <Resumen\r\n          datos={datos}\r\n        />\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {   \r\n    if ( activeStep === 0){\r\n      let band = validarVaciosDatosFiscales(datos)\r\n      if(band === false) {   \r\n        funcGuardarError(true, 'Error, hay campos vacios en los datos Fiscales')             \r\n        return\r\n      }\r\n      band = verificarFormatoDatosFiscales(errorRfc, errorCp, errorColonia, errorCiudad, errorEstado)\r\n      if(band[0] === false){\r\n        funcGuardarError(true, band[1])\r\n        return\r\n      }\r\n    } else if( activeStep === 1){\r\n      let band = validarVaciosDatosPersonales(datos)\r\n      if(band === false) {\r\n        funcGuardarError(true, 'Error, hay campos vacios en los datos Personales')        \r\n        return\r\n      }\r\n      band = verificarFormatoDatosPersonales(errorCorreo, errorNombreContacto, errorTelefonoFijo, errorTelefonoMovil)\r\n      if(band[0] === false){\r\n        funcGuardarError(true, band[1])\r\n        return\r\n      }\r\n    }\r\n    else if( activeStep === 2){\r\n      let band = validarVaciosDatosBancarios(datos)\r\n      if(band === false) {\r\n        funcGuardarError(true, 'Error, hay campos vacios en los datos Bancarios')        \r\n        return\r\n      }\r\n      band = verificarFormatoDatosBancarios(errorNumeroClave, errorCuenta)\r\n      if(band[0] === false){\r\n        funcGuardarError(true, band[1])\r\n        return\r\n      }\r\n    }   \r\n    funcGuardarError(false, '')    \r\n    if(activeStep === steps.length-1){\r\n      setOpenModal(true)    \r\n      return\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n \r\n  \r\n  return (\r\n    <Fragment>\r\n      <CssBaseline />      \r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Registro de Proveedores\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          { bandError ? <Error mensaje={mensajeError}/> : null }\r\n          <br/>\r\n          <Fragment>\r\n            {\r\n              getStepContent(activeStep)\r\n            }\r\n            <Botones\r\n              activeStep={activeStep}\r\n              steps={steps}\r\n              handleNext={handleNext}\r\n              handleBack={handleBack}\r\n            />\r\n            <Modal\r\n              openmodal={openmodal}\r\n              setOpenModal={setOpenModal}\r\n              guardarBandDatosApi={guardarBandDatosApi}\r\n            />\r\n          </Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosFiscales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosPersonales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\DatosBancarios.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Botones.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\funciones\\validarDatos.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Copyright.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Resumen.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Modal.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\ObrasAdmin.js",["77","78","79","80","81"],"import { Fragment, useState, useEffect } from 'react';\r\nimport { makeStyles, CssBaseline, Paper, Button, Typography, InputLabel, Select, MenuItem, Grid, TextField } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons/'\r\nimport Copyright from './Copyright'\r\nimport TablaObrasAdmin from './TablaObrasAdmin'\r\nimport Error from './Error'\r\nimport Modal from './Modal'\r\nimport { schema } from '../funciones/validarObrasAdmin'\r\n\r\nconst items = [\r\n    {\r\n        \"__id\": 1,\r\n        \"categoria\": \"cemento\",\r\n        \"subcategoria\": \"cemento PVC\",\r\n        \"folio\": \"01010001\",\r\n        \"nombre\": \"Cemento para PVC sanitario lata de 480 ml, marca Amanco\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 2,\r\n        \"categoria\": \"cemento\",\r\n        \"subcategoria\": \"cemento PVC\",\r\n        \"folio\": \"01010002\",\r\n        \"nombre\": \"Cemento para pvc alta presión lata de 480 ml\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 3,\r\n        \"categoria\": \"Miscelaneos Construccion\",\r\n        \"subcategoria\": \"Cable de acero\",\r\n        \"folio\": \"02010001\",\r\n        \"nombre\": \"Cable acero galvanizado 7 x 19 de 5/16\\\" tipo aircraft\",\r\n        \"unidades\": \"m\"\r\n    },\r\n    {\r\n        \"__id\": 4,\r\n        \"categoria\": \"Miscelaneos Construccion\",\r\n        \"subcategoria\": \"Arena\",\r\n        \"folio\": \"02020001\",\r\n        \"nombre\": \"Arena de mina (por camión 6m3)\",\r\n        \"unidades\": \"m3\"\r\n    },\r\n    {\r\n        \"__id\": 5,\r\n        \"categoria\": \"Miscelaneos Construccion\",\r\n        \"subcategoria\": \"Grava\",\r\n        \"folio\": \"02030001\",\r\n        \"nombre\": \"Grava de 1/4\\\"\",\r\n        \"unidades\": \"m3\"\r\n    },\r\n    {\r\n        \"__id\": 6,\r\n        \"categoria\": \"Tuberias\",\r\n        \"subcategoria\": \"PVC\",\r\n        \"folio\": \"03010001\",\r\n        \"nombre\": \"Codo 90° de PVC  de 3\\\"\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 7,\r\n        \"categoria\": \"Tuberias\",\r\n        \"subcategoria\": \"PVC\",\r\n        \"folio\": \"03010002\",\r\n        \"nombre\": \"Tubo pvc sanitario de 75 mm (3\\\") norma extremos lisos, marca Amanco\",\r\n        \"unidades\": \"tmo/6m\"\r\n    },\r\n    {\r\n        \"__id\": 8,\r\n        \"categoria\": \"Madero\",\r\n        \"subcategoria\": \"Triplay\",\r\n        \"folio\": \"04010001\",\r\n        \"nombre\": \"Triplay de 1.22 x 2.44 m 15 mm 1 cara\",\r\n        \"unidades\": \"m2\"\r\n    },\r\n    {\r\n        \"__id\": 9,\r\n        \"categoria\": \"Alambres\",\r\n        \"subcategoria\": \"Recocido\",\r\n        \"folio\": \"05010001\",\r\n        \"nombre\": \"ALAMBRE RECOCIDO\",\r\n        \"unidades\": \"kg\"\r\n    },\r\n    {\r\n        \"__id\": 10,\r\n        \"categoria\": \"Concretos\",\r\n        \"subcategoria\": \"FC150\",\r\n        \"folio\": \"06010001\",\r\n        \"nombre\": \"Concreto f¨c=150 kg/cm2, pmezc\",\r\n        \"unidades\": \"m3\"\r\n    },\r\n    {\r\n        \"__id\": 11,\r\n        \"categoria\": \"Concretos\",\r\n        \"subcategoria\": \"Premezclado\",\r\n        \"folio\": \"07010001\",\r\n        \"nombre\": \"Concreto premezclado convencional fc=250 kg/cm2 RN, tma= 20mm rev 14 (clase 2) bombeable,\",\r\n        \"unidades\": \"m3\"\r\n    },\r\n    {\r\n        \"__id\": 12,\r\n        \"categoria\": \"Traves\",\r\n        \"subcategoria\": \"Polin\",\r\n        \"folio\": \"08010001\",\r\n        \"nombre\": \"Polin 3\\\" x 3 1/2\\\" x 8 regular\",\r\n        \"unidades\": \"pt\"\r\n    },\r\n    {\r\n        \"__id\": 13,\r\n        \"categoria\": \"llantas\",\r\n        \"subcategoria\": \"Moto CAT 16G\",\r\n        \"folio\": \"09010001\",\r\n        \"nombre\": \"LLANTAS MOTOCONFORMADORA CAT 16-G\",\r\n        \"unidades\": \"piezas\"\r\n    },\r\n    {\r\n        \"__id\": 14,\r\n        \"categoria\": \"llantas\",\r\n        \"subcategoria\": \"Cargador 988-F\",\r\n        \"folio\": \"10010001\",\r\n        \"nombre\": \"LLANTA PARA CARGADOR 988-F\",\r\n        \"unidades\": \"piezas\"\r\n    },\r\n    {\r\n        \"__id\": 15,\r\n        \"categoria\": \"Fibras\",\r\n        \"subcategoria\": \"Sintetica\",\r\n        \"folio\": \"11010001\",\r\n        \"nombre\": \"Fibra sintetica SIKA FIBER 600 GRS\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 15,\r\n        \"categoria\": \"Escalera\",\r\n        \"subcategoria\": \"Aluminio\",\r\n        \"folio\": \"12010001\",\r\n        \"nombre\": \"Escalera recta de aluminio para alcanzar 11 m máximo, marca Cuprum, con sistema de izado doble con cuerda de nylon.\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 16,\r\n        \"categoria\": \"Malla\",\r\n        \"subcategoria\": \"Electrosoldada\",\r\n        \"folio\": \"13010001\",\r\n        \"nombre\": \"Malla electosoldada 6x6-10x10, marca Deacero\",\r\n        \"unidades\": \"m2\"\r\n    },\r\n    {\r\n        \"__id\": 17,\r\n        \"categoria\": \"impermiavilizante\",\r\n        \"subcategoria\": \"curafest\",\r\n        \"folio\": \"14010001\",\r\n        \"nombre\": \"Curafest MC-320 19 lt, marca Fester\",\r\n        \"unidades\": \"pza\"\r\n    },\r\n    {\r\n        \"__id\": 18,\r\n        \"categoria\": \"Primiario\",\r\n        \"subcategoria\": \"Anticorrosivo\",\r\n        \"folio\": \"16010001\",\r\n        \"nombre\": \"Primario anticorrosivo #3 rojo oxido, marca Comex.\",\r\n        \"unidades\": \"cb/19L\"\r\n    },\r\n    {\r\n        \"__id\": 19,\r\n        \"categoria\": \"laminas\",\r\n        \"subcategoria\": \"Pintro\",\r\n        \"folio\": \"17010001\",\r\n        \"nombre\": \"LAMINA PINTRO CAL. 26\",\r\n        \"unidades\": \"ml\"\r\n    }\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(1500 + theme.spacing(2) * 2)]: {    \r\n        width: 1500,    \r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    btnregistrar: {\r\n        float: 'right'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ObrasAdmin = ( { guardarNumeroComponente } ) => {\r\n    const classes = useStyles();\r\n    //const [age, setAge] = useState('')\r\n\r\n    const [ error, guardarError ] = useState({\r\n        bandError: false,\r\n        mensajeError: ''\r\n    })\r\n\r\n    const [ categorias, guardarCategorias] = useState([...new Set(items.map(e => (e.categoria)))])\r\n    \r\n    const [ subcategorias, guardarSubCategorias ] = useState([])\r\n\r\n    const [ productos, guardarProductos ] = useState([])\r\n\r\n    const [ datos, guardarDatos ] = useState({        \r\n        folioItem: '',\r\n        categoria: '',\r\n        subcategoria: '',\r\n        producto: '',\r\n        unidad: '',\r\n        requeridos: 0,\r\n        anotaciones: '',\r\n        eliminar: ''\r\n    })\r\n\r\n    const [ rows, guardarRows ] = useState([])\r\n\r\n    const [ erroresdatos, guardarErroresDatos ] = useState({\r\n        errorFolioItem: false,\r\n    })\r\n    const [ banddatosapi, guardarBandDatosApi ] = useState(false)\r\n  \r\n    const [openmodal, setOpenModal] = useState(false)\r\n\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n\r\n    const { errorFolioItem } = erroresdatos\r\n    \r\n    const { folioItem, categoria, subcategoria, producto, unidad, requeridos, anotaciones } = datos\r\n\r\n    const { bandError, mensajeError } = error\r\n\r\n    useEffect(() => {\r\n        if(rows.length === 0){\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n    }, [rows])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.categoria === categoria)\r\n        guardarSubCategorias([...new Set(resultado.map(e => (e.subcategoria)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            subcategoria: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })       \r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.subcategoria === subcategoria)\r\n        guardarProductos([...new Set(resultado.map(e => (e.nombre)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })\r\n    }, [subcategoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.nombre === producto)\r\n               \r\n        resultado.map(e => (guardarDatos({\r\n               ...datos,\r\n               unidad: e.unidades,\r\n               folioItem: e.folio\r\n            })))\r\n    }, [producto])\r\n\r\n    useEffect(() => {\r\n        if(banddatosapi && rows.length > 0){\r\n            alert('regitrado correctamente')\r\n            guardarNumeroComponente(3)\r\n        }\r\n    }, [banddatosapi])\r\n\r\n    const submitTabla = e => {\r\n        e.preventDefault()\r\n        \r\n        if (folioItem.trim() === '' || unidad.trim() === '' || requeridos === 0 || anotaciones.trim() === ''){\r\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\r\n            return\r\n        }        \r\n\r\n        const result = rows.find(row => row.folioItem === folioItem)        \r\n\r\n        if (result){            \r\n            guardarError({ bandError: true, mensajeError: 'El folio ya ha sido ingresado' })\r\n            return\r\n        }\r\n\r\n        if ( errorFolioItem){\r\n            guardarError({ bandError: true, mensajeError: 'El folio debe de ser con puros numeros' })\r\n            return\r\n        }\r\n        guardarError({ bandError: false, mensajeError: '' })\r\n        guardarRows([...rows, datos])\r\n        guardarDatos({\r\n            folioItem: '',\r\n            categoria: '',\r\n            subcategoria: '',\r\n            producto: '',\r\n            unidad: '',\r\n            requeridos: 0,\r\n            anotaciones: '',\r\n            eliminar: ''\r\n        })\r\n        guardarBandBotonRegistrar(false)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })        \r\n    } \r\n    const inputPropsFolioItem = () =>{\r\n        const { error } = schema.validate({numerico: folioItem})\r\n        if ( error ){\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorFolioItem: true\r\n            })\r\n        }else{\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorFolioItem: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const registrar = () => {\r\n        setOpenModal(true)\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <CssBaseline />      \r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Registro de Obras\r\n                    </Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    { bandError ? <Error mensaje={mensajeError}/> : null }\r\n                    <br/>\r\n                    <form\r\n                        onSubmit={submitTabla}\r\n                    >\r\n                        <Grid container spacing={3}>\r\n                            \r\n                            <Grid item xs={3}>\r\n                                <TextField                                              \r\n                                    disabled          \r\n                                    id=\"folioItem\"\r\n                                    name=\"folioItem\"\r\n                                    label=\"Folio Item\"\r\n                                    value={folioItem}\r\n                                    onChange={handleChange}    \r\n                                    onKeyUp={inputPropsFolioItem}\r\n                                    error={errorFolioItem}          \r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>                        \r\n                                <InputLabel id=\"categoria\">Categoría</InputLabel>\r\n                                <Select\r\n                                    required\r\n                                    id=\"categoria\"\r\n                                    name='categoria'\r\n                                    value={categoria}\r\n                                    onChange={handleChange}\r\n                                    //onSelect={handleChangeSelect}\r\n                                    fullWidth\r\n                                >\r\n                                    {\r\n                                        categorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                                    }\r\n                                    \r\n                                    {\r\n                                    /*\r\n                                    <MenuItem value={10}>Categoría 1</MenuItem>\r\n                                    <MenuItem value={20}>Categoría 2</MenuItem>\r\n                                    <MenuItem value={30}>Categoría</MenuItem>\r\n                                    */    \r\n                                    }\r\n                                </Select>                       \r\n                            </Grid>\r\n                            <Grid item xs={3}>                        \r\n                                <InputLabel id=\"subcategoria\">Sub Categoría</InputLabel>\r\n                                <Select\r\n                                    required\r\n                                    id=\"subcategoria\"\r\n                                    name='subcategoria'\r\n                                    value={subcategoria}\r\n                                    onChange={handleChange}\r\n                                    fullWidth\r\n                                >\r\n                                    {\r\n                                        subcategorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                                    }\r\n                                    {\r\n                                    /*\r\n                                    <MenuItem value={10}>Sub Categoría 1</MenuItem>\r\n                                    <MenuItem value={20}>Sub Categoría 2</MenuItem>\r\n                                    <MenuItem value={30}>Sub Categoría</MenuItem>\r\n                                    */\r\n                                    }\r\n                                </Select>                       \r\n                            </Grid>\r\n                            <Grid item xs={3}>                        \r\n                                <InputLabel id=\"producto\">Producto</InputLabel>\r\n                                <Select\r\n                                    required\r\n                                    id=\"producto\"\r\n                                    name='producto'\r\n                                    value={producto}\r\n                                    onChange={handleChange}\r\n                                    fullWidth\r\n                                >\r\n                                    {\r\n                                        productos.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                                    }\r\n                                    {\r\n                                    /*\r\n                                    <MenuItem value={10}>Producto 1</MenuItem>\r\n                                    <MenuItem value={20}>Producto 2</MenuItem>\r\n                                    <MenuItem value={30}>Producto 3</MenuItem>\r\n                                    */\r\n                                    }\r\n                                </Select>                       \r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>                        \r\n                            <Grid item xs={3}>\r\n                                <TextField                                    \r\n                                    id=\"unidad\"\r\n                                    name=\"unidad\"\r\n                                    label=\"Unidad\"\r\n                                    disabled\r\n                                    value={unidad}\r\n                                    onChange={handleChange}\r\n                                    fullWidth                                    \r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"requeridos\"\r\n                                    name=\"requeridos\"\r\n                                    label=\"Requeridos\"\r\n                                    value={requeridos}\r\n                                    onChange={handleChange}\r\n                                    type='number'\r\n                                    fullWidth                                    \r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"anotaciones\"\r\n                                    name=\"anotaciones\"\r\n                                    label=\"Anotaciones\"\r\n                                    value={anotaciones}\r\n                                    onChange={handleChange}\r\n                                    fullWidth                                    \r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                            <Button\r\n                                type='submit'\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                fullWidth\r\n                                startIcon={<Add />}\r\n                            >\r\n                                Añadir\r\n                            </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>              \r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <TablaObrasAdmin\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                    />\r\n                    <br/>\r\n                    <Grid container justify=\"flex-end\" spacing={3}>\r\n                        <Grid item  xs={3}>\r\n                            <Button \r\n                                className={classes.btnregistrar}\r\n                                disabled={bandbotonregistrar}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={registrar}\r\n                                dir=\"rtl\"\r\n                            >Registrar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Modal\r\n                        openmodal={openmodal}\r\n                        setOpenModal={setOpenModal}\r\n                        guardarBandDatosApi={guardarBandDatosApi}\r\n                    />\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default ObrasAdmin;","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\TablaObrasAdmin.js",["82","83"],"import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Input } from '@material-ui/core';\r\n\r\n\r\n\r\n/*\r\nconst rows = [\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'), \r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n  createData('01010001', 'cemento', 'cemento PVC', 'Cemento para PVC sanitario lata de 480 ml, marca Amanco', 'pza', 2, 'que sea todo chido'),\r\n];\r\n*/\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function TablaObrasAdmin({ rows, guardarRows }) {\r\n\r\n  const columns = [\r\n    { id: 'folioItem', label: 'Folio Item', minWidth: 100 },\r\n    { id: 'categoria', label: 'Categoria', minWidth: 100 },\r\n    {\r\n      id: 'subcategoria',\r\n      label: 'Sub Categoria',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'producto',\r\n      label: 'Producto',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'unidad',\r\n      label: 'Unidad',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'requeridos',\r\n      label: 'Requeridos',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'anotaciones',\r\n      label: 'Anotaciones',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'eliminar',\r\n      label: 'eliminar',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    }\r\n  ]\r\n  \r\n  \r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  //const rows = []\r\n  //{ folioItem: 'sdfd', categoria: 'dsfds', subcategoria: 'fdsf', producto: 'sdf', unidad: 'dsfdsf', requerido: 'dsfsdf', anotaciones: 'dsf' }\r\n  \r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const eliminarDato = e => {\r\n    const dato_eliminado = rows.filter(row => row.folioItem !== e.target.id)\r\n    guardarRows([...dato_eliminado])\r\n    \r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              \r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>                  \r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        \r\n                        { \r\n                        column.id === 'eliminar' \r\n                        ? \r\n                        <input \r\n                          type='button'\r\n                          id={row.folioItem}\r\n                          value='Eliminar'\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={eliminarDato}\r\n                        /> : value }\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\funciones\\validarObrasAdmin.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":162,"column":6,"nodeType":"90","endLine":162,"endColumn":20,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":215,"column":25,"nodeType":"94","messageId":"95","endLine":215,"endColumn":42},{"ruleId":"88","severity":1,"message":"96","line":265,"column":8,"nodeType":"90","endLine":265,"endColumn":19,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"96","line":276,"column":8,"nodeType":"90","endLine":276,"endColumn":22,"suggestions":"98"},{"ruleId":"88","severity":1,"message":"96","line":286,"column":8,"nodeType":"90","endLine":286,"endColumn":18,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"100","line":293,"column":8,"nodeType":"90","endLine":293,"endColumn":22,"suggestions":"101"},{"ruleId":"92","severity":1,"message":"102","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":16},{"ruleId":"92","severity":1,"message":"103","line":11,"column":18,"nodeType":"94","messageId":"95","endLine":11,"endColumn":23},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'datos' and 'guardarNumeroComponente'. Either include them or remove the dependency array. If 'guardarNumeroComponente' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"no-unused-vars","'guardarCategorias' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'datos'. Either include it or remove the dependency array. You can also do a functional update 'guardarDatos(d => ...)' if you only need 'datos' in the 'guardarDatos' call.",["107"],["108"],["109"],"React Hook useEffect has missing dependencies: 'guardarNumeroComponente' and 'rows.length'. Either include them or remove the dependency array. If 'guardarNumeroComponente' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["110"],"'Button' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [banddatosapi, datos, guardarNumeroComponente]",{"range":"121","text":"122"},"Update the dependencies array to be: [categoria, datos]",{"range":"123","text":"124"},"Update the dependencies array to be: [datos, subcategoria]",{"range":"125","text":"126"},"Update the dependencies array to be: [datos, producto]",{"range":"127","text":"128"},"Update the dependencies array to be: [banddatosapi, guardarNumeroComponente, rows.length]",{"range":"129","text":"130"},[4580,4594],"[banddatosapi, datos, guardarNumeroComponente]",[7736,7747],"[categoria, datos]",[8071,8085],"[datos, subcategoria]",[8364,8374],"[datos, producto]",[8552,8566],"[banddatosapi, guardarNumeroComponente, rows.length]"]