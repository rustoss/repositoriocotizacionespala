[{"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\index.js":"1","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\reportWebVitals.js":"2","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\App.js":"3","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Login.js":"4","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Error.js":"5","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Copyright.js":"6","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Modal.js":"7","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Dashboard.js":"8","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\CrearObraAdmin.js":"9","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ObrasCreadasAdmin.js":"10","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ListItemsAdmin.js":"11","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\PerfilAdmin.js":"12","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\TablaObrasAdmin.js":"13","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js":"14","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ListItemsProv.js":"15","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\PerfilProv.js":"16","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Checkout.js":"17","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosFiscales.js":"18","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Resumen.js":"19","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosPersonales.js":"20","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosBancarios.js":"21","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Botones.js":"22","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ObrasDisponiblesProv.js":"23","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ObrasCotizadasProv.js":"24","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\FormularioRegistroObrasAdmin.js":"25","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\CotizarObraProv.js":"26","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\FormularioCotizarObraProv.js":"27","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\TablaObraProv.js":"28","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\CardObraDisponible.js":"29","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\context\\ComponenteContext.js":"30","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Obras.js":"31","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\CardObra.js":"32","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\DetalleObraCotizadaProv.js":"33","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\guardarLS.js":"34","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\validarDatos.js":"35","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\createPdf.js":"36","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\BuscadorObra.js":"37","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\DatosPersonales.js":"38","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ObrasCotizadasAdmin.js":"39","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\DetalleObraAdmin.js":"40","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\docdefinition.js":"41","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\createTable.js":"42","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\images\\logo.js":"43"},{"size":592,"mtime":1610642623584,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":1030,"mtime":1611256294157,"results":"47","hashOfConfig":"45"},{"size":6620,"mtime":1611256302525,"results":"48","hashOfConfig":"45"},{"size":179,"mtime":1608603586247,"results":"49","hashOfConfig":"45"},{"size":463,"mtime":1610651482907,"results":"50","hashOfConfig":"45"},{"size":989,"mtime":1609172071762,"results":"51","hashOfConfig":"45"},{"size":15796,"mtime":1611269776970,"results":"52","hashOfConfig":"45"},{"size":9605,"mtime":1611269520679,"results":"53","hashOfConfig":"45"},{"size":154,"mtime":1610660907411,"results":"54","hashOfConfig":"45"},{"size":3038,"mtime":1611268588663,"results":"55","hashOfConfig":"45"},{"size":159,"mtime":1610734437071,"results":"56","hashOfConfig":"45"},{"size":4403,"mtime":1611009695647,"results":"57","hashOfConfig":"45"},{"size":2457,"mtime":1610138172291,"results":"58","hashOfConfig":"45"},{"size":2744,"mtime":1611256355759,"results":"59","hashOfConfig":"45"},{"size":244,"mtime":1611256781481,"results":"60","hashOfConfig":"45"},{"size":9630,"mtime":1611256357676,"results":"61","hashOfConfig":"45"},{"size":7860,"mtime":1611256315100,"results":"62","hashOfConfig":"45"},{"size":3713,"mtime":1610138451371,"results":"63","hashOfConfig":"45"},{"size":4127,"mtime":1611256322546,"results":"64","hashOfConfig":"45"},{"size":2376,"mtime":1610988430102,"results":"65","hashOfConfig":"45"},{"size":975,"mtime":1610138543253,"results":"66","hashOfConfig":"45"},{"size":2347,"mtime":1610650235337,"results":"67","hashOfConfig":"45"},{"size":176,"mtime":1610138865904,"results":"68","hashOfConfig":"45"},{"size":6625,"mtime":1611257302200,"results":"69","hashOfConfig":"45"},{"size":9211,"mtime":1611269627694,"results":"70","hashOfConfig":"45"},{"size":8030,"mtime":1611261802373,"results":"71","hashOfConfig":"45"},{"size":4399,"mtime":1611009899107,"results":"72","hashOfConfig":"45"},{"size":2516,"mtime":1610650410107,"results":"73","hashOfConfig":"45"},{"size":1137,"mtime":1611271227098,"results":"74","hashOfConfig":"45"},{"size":3543,"mtime":1611248456635,"results":"75","hashOfConfig":"45"},{"size":4684,"mtime":1611451427066,"results":"76","hashOfConfig":"45"},{"size":411,"mtime":1610729777087,"results":"77","hashOfConfig":"45"},{"size":321,"mtime":1610656735701,"results":"78","hashOfConfig":"45"},{"size":4205,"mtime":1609270002436,"results":"79","hashOfConfig":"45"},{"size":1295,"mtime":1611450701778,"results":"80","hashOfConfig":"45"},{"size":4067,"mtime":1611256297731,"results":"81","hashOfConfig":"45"},{"size":2431,"mtime":1611269581464,"results":"82","hashOfConfig":"45"},{"size":2224,"mtime":1611256306103,"results":"83","hashOfConfig":"45"},{"size":7913,"mtime":1611249968380,"results":"84","hashOfConfig":"45"},{"size":3354,"mtime":1611450756616,"results":"85","hashOfConfig":"45"},{"size":561,"mtime":1611450824606,"results":"86","hashOfConfig":"45"},{"size":8321,"mtime":1611450782095,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1lvznef",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\index.js",[],["182","183"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\reportWebVitals.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\App.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Login.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Error.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Copyright.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Modal.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Dashboard.js",["184","185","186","187"],"import { useState, useContext, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport jwt_decode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { guardarLS } from '../libs/guardarLS'\r\nimport { makeStyles, Avatar, CssBaseline, Drawer, AppBar, Toolbar, List } from '@material-ui/core';\r\nimport { Typography, Divider, IconButton, Badge } from '@material-ui/core/';\r\nimport { Menu, ChevronLeft, ExitToApp } from '@material-ui/icons';\r\n\r\nimport ListItemsAdmin from './admin/ListItemsAdmin';\r\nimport PerfilAdmin from './admin/PerfilAdmin'\r\nimport CrearObraAdmin from './admin/CrearObraAdmin'\r\n//import ObrasCreadasAdmin from './admin/ObrasCreadasAdmin'\r\nimport ObrasCotizadasAdmin from './admin/ObrasCotizadasAdmin'\r\nimport DetalleObraAdmin from './admin/DetalleObraAdmin'\r\n\r\nimport ListItemsProv from './prov/ListItemsProv'\r\nimport PerfilProv from './prov/PerfilProv'\r\n// import ObrasDisponiblesProv from './prov/ObrasDisponiblesProv'\r\n// import ObrasCotizadasProv from './prov/ObrasCotizadasProv'\r\nimport CotizarObraProv from './prov/CotizarObraProv'\r\nimport DetalleObraCotizadaProv from './prov/DetalleObraCotizadaProv'\r\n\r\nimport Obras from './Obras'\r\n\r\nimport {ComponenteContext} from '../context/ComponenteContext'\r\n\r\n//import {correoJwt} from '../funciones/decodificarJwt'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    background: '#cddc39',\r\n    color: 'black'\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    \r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n    \r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  \r\n  const resultado = JSON.parse(localStorage.getItem('jwt'))\r\n  const decoded = jwt_decode(resultado)\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n\r\n  const { nivel_acceso, numero_componente } = componentecontx  \r\n\r\n  //const componente_ls = JSON.parse(localStorage.getItem('componente'))  \r\n  \r\n  // const [ componente, guardarComponente ] = useState({\r\n  //   nivel_acceso: componente_ls.nivel_acceso,\r\n  //   numero_componente: componente_ls.numero_componente\r\n  // })\r\n\r\n  // const { nivel_acceso, numero_componente } = componente\r\n\r\n  const [open, setOpen] = useState(true);\r\n  \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  const [ obrasdisponibles, guardarObrasDisponibles ] = useState([])\r\n  const [ obrascotizadas, guardarObrasCotizadas ] = useState([])\r\n  const [ obrastotales, guardarObrasTotales ] = useState([])\r\n  const [ rowsobrasdisponibles, guardarRowsObrasDisponibles ] = useState([])\r\n  const [ rowsobrascotizadas, guardarRowsObrasCotizadas ] = useState([])\r\n  const [ rowsobrastotales, guardarRowsObrasTotales ] = useState([])\r\n  const [ actualizarcards, guardarActualizarCards ] = useState(0)\r\n  const [ paginaactual, guardarPaginaActual ] = useState(0)\r\n  const [ page, setPage ] = useState(1);    \r\n  const [ cantidadcards, guardarCantidadCards ] = useState(12)\r\n  const [ paginafinal, guardarPaginaFinal ] = useState(cantidadcards)\r\n  const [ tipobusqueda, guardarTipoBusqueda ] = useState('Buscar por Folio Obra')\r\n  const [ perfil, guardarPerfil ] = useState({})\r\n\r\n  useEffect(() => {\r\n    \r\n    const consultarAPI = async () => {\r\n      if( nivel_acceso === 0){        \r\n        const respObrasTotales = await axios.get('https://apicotizacion.herokuapp.com/api/obras')\r\n        const obrasTotales = respObrasTotales.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            nombreObra: obra.nombre_obra                    \r\n          }\r\n        ))\r\n        guardarObrasTotales(respObrasTotales.data.Obras)\r\n        guardarRowsObrasTotales(obrasTotales)\r\n      }else if (nivel_acceso === 1){\r\n        const respObrasDisp = await axios.get('https://apicotizacion.herokuapp.com/api/obras/vigentes')\r\n        const respObrasCoti = await axios.get(`https://apicotizacion.herokuapp.com/api/cotizaciones/cotizadas/${decoded.correo}`)\r\n        const respPerfil = await axios.get(`https://apicotizacion.herokuapp.com/api/proveedores/datos_personales/${decoded.correo}`)\r\n        const obrasDisp = respObrasDisp.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            nombreObra: obra.nombre_obra                    \r\n          }\r\n        ))\r\n        const obrasCoti = respObrasCoti.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            folioCotizacion: obra.folio_cotizacion,\r\n            nombreObra: obra.nombre_obra,                   \r\n          }\r\n        ))\r\n        guardarObrasDisponibles(respObrasDisp.data.Obras)\r\n        guardarObrasCotizadas(respObrasCoti.data.Obras)\r\n        guardarRowsObrasDisponibles(obrasDisp)\r\n        guardarRowsObrasCotizadas(obrasCoti)\r\n        guardarPerfil(respPerfil.data.datos_personales)\r\n      }\r\n    }\r\n    consultarAPI()\r\n    //eslint-disable-next-line\r\n  }, [actualizarcards])\r\n  //const [ numerocomponentedashboardadmin, guardarNumeroComponenteDashboardAdmin ] = useState(0)\r\n  //const [ numerocomponentedashboardprov, guardarNumeroComponenteDashboardProv ] = useState(0)  \r\n  const [ obra, guardarObra ] = useState({})\r\n\r\n  const paginaAdmin = () => {\r\n    if (nivel_acceso === 0 && numero_componente === 0){\r\n      return <CrearObraAdmin\r\n        //guardarComponente={guardarComponente}\r\n        //componente={componente}\r\n        guardarActualizarCards={guardarActualizarCards}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 1){\r\n      return <PerfilAdmin\r\n        correo={decoded.correo}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 2){\r\n      return <Obras        \r\n        titulo={\"Obras Creadas\"}\r\n        siguientecomponente={3}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrastotales}  \r\n        guardarRows={guardarRowsObrasTotales}      \r\n        obrastotal={obrastotales}     \r\n        totalpaginas={Math.ceil(rowsobrastotales.length/cantidadcards)} \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={false}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 3){\r\n      return <ObrasCotizadasAdmin\r\n        obra={obra}\r\n        guardarObra={guardarObra}\r\n        rowsobrascotizadas={rowsobrascotizadas}      \r\n        guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}        \r\n        obrascotizadas={obrascotizadas}\r\n        guardarObrasCotizadas={guardarObrasCotizadas}        \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={true}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 4){\r\n      return <DetalleObraAdmin\r\n        obra={obra}\r\n      />\r\n      //return `La Obra es: ${obra.folio_obra} \\nLa cotizacion es: ${obra.folio_cotizacion}`\r\n    }else{\r\n      return 'error 400'\r\n    }\r\n    /*\r\n    switch (numerocomponentedashboardadmin){\r\n      case 0:\r\n        return <CrearObraAdmin\r\n          guardarNumeroComponenteDashboardAdmin={guardarNumeroComponenteDashboardAdmin}\r\n        />\r\n      case 1:\r\n        return <PerfilAdmin/>\r\n      case 2:\r\n        return <ObrasCreadasAdmin/>\r\n      default:\r\n        return 'error 400'\r\n    }\r\n    */\r\n  }\r\n\r\n  const paginaUsuario = () => {\r\n    if(nivel_acceso === 1 && numero_componente === 0){\r\n      return <Obras\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        titulo={\"Obras Disponibles\"}\r\n        siguientecomponente={3}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrasdisponibles}  \r\n        guardarRows={guardarRowsObrasDisponibles}            \r\n        obrastotal={obrasdisponibles}\r\n        totalpaginas={Math.ceil(rowsobrasdisponibles.length/cantidadcards)}   \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={false}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 1){\r\n      return <PerfilProv\r\n        perfil={perfil}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 2){\r\n      //return <ObrasCotizadasProv/>      \r\n      return <Obras\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        titulo={\"Obras Cotizadas\"}\r\n        siguientecomponente={4}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrascotizadas}      \r\n        guardarRows={guardarRowsObrasCotizadas}        \r\n        obrastotal={obrascotizadas}\r\n        totalpaginas={Math.ceil(rowsobrascotizadas.length/cantidadcards)} \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={true}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 3){\r\n      return <CotizarObraProv\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        obra={obra}\r\n        guardarActualizarCards={guardarActualizarCards}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 4){\r\n      return <DetalleObraCotizadaProv\r\n        obra={obra}\r\n      />\r\n    }\r\n    else{\r\n      return 'error 400'\r\n    }\r\n    /*\r\n    switch (numerocomponentedashboardprov) {\r\n      case 0:\r\n        return <ObrasDisponiblesProv\r\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}         \r\n          guardarObra={guardarObra}\r\n        />\r\n      case 1:\r\n        return <PerfilProv/>\r\n      case 2:\r\n        return <ObrasCotizadasProv/>\r\n      case 3:\r\n        return <CotizarObraProv\r\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}          \r\n          obra={obra}\r\n        />\r\n      default:\r\n        return 'error 400'\r\n    }\r\n    */\r\n  }\r\n\r\n  const salirlogin = () => {\r\n    //guardarLS(\"\", \"\", \"\")\r\n    localStorage.removeItem('jwt')\r\n    localStorage.removeItem('componente')\r\n    guardarComponenteContx({\r\n      nivel_acceso: null,\r\n      numero_ventana: 0,\r\n      numero_componente: null\r\n    })\r\n    /*const objeto = {\r\n      nivel_acceso: 0,\r\n      numero_componente: 0,\r\n      numero_ventana: 0\r\n    }\r\n    localStorage.setItem('componente', JSON.stringify(objeto))\r\n\r\n    guardarComponenteContx({\r\n      nivel_acceso: 0,\r\n      numero_ventana: 0,\r\n      numero_componente: 0\r\n    })\r\n    */\r\n\r\n    //guardarNumeroComponente(0)    \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {         \r\n              nivel_acceso === 0 ? 'Administración' : 'Proveedor'\r\n            }\r\n            \r\n          </Typography>          \r\n          <IconButton color=\"inherit\">\r\n            <Badge olor=\"secondary\">\r\n              <ExitToApp onClick={salirlogin} />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>          \r\n          <IconButton onClick={handleDrawerClose}>            \r\n            <ChevronLeft />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {\r\n          nivel_acceso === 0\r\n          ?\r\n          <ListItemsAdmin\r\n            guardarPaginaActual={guardarPaginaActual}\r\n            setPage={setPage}\r\n            guardarRowsObrasTotales={guardarRowsObrasTotales}\r\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}     \r\n            obrastotales={obrastotales}            \r\n            guardarTipoBusqueda={guardarTipoBusqueda}\r\n          />\r\n          :\r\n          <ListItemsProv\r\n            guardarPaginaActual={guardarPaginaActual}\r\n            setPage={setPage}\r\n            obrasdisponibles={obrasdisponibles}\r\n            guardarRowsObrasDisponibles={guardarRowsObrasDisponibles}                  \r\n            obrascotizadas={obrascotizadas}\r\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}            \r\n            guardarTipoBusqueda={guardarTipoBusqueda}\r\n          />\r\n        }\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />        \r\n            {\r\n              nivel_acceso === 0 ? paginaAdmin() : paginaUsuario()\r\n            }\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\CrearObraAdmin.js",["188"],"import { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { makeStyles, CssBaseline, Paper, Button, Typography, Grid } from '@material-ui/core';\r\nimport Axios from 'axios'\r\nimport Copyright from '../Copyright'\r\nimport TablaObrasAdmin from './TablaObrasAdmin'\r\nimport Error from '../Error'\r\nimport Modal from '../Modal'\r\nimport FormularioRegistroObrasAdmin from './FormularioRegistroObrasAdmin'\r\nimport DatosPrincipalesObrasAdmin from './DatosPrincipalesObrasAdmin'\r\nimport {ComponenteContext} from '../../context/ComponenteContext'\r\n\r\nconst useStyles = makeStyles((theme) => ({   \r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    btnregistrar: {\r\n        float: 'right'\r\n    },\r\n}));\r\n\r\n\r\nconst CrearObraAdmin = ( { guardarActualizarCards } ) => {\r\n    const classes = useStyles();\r\n\r\n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n\r\n    // Creacion de states\r\n    const [ error, guardarError ] = useState({\r\n        bandError: false,\r\n        mensajeError: ''\r\n    })\r\n    const [ items, guardarItems ] = useState([])\r\n    const [ categorias, guardarCategorias] = useState([])\r\n    const [ subcategorias, guardarSubCategorias ] = useState([])\r\n    const [ productos, guardarProductos ] = useState([])\r\n    const [ datos, guardarDatos ] = useState({        \r\n        folioItem: '',\r\n        categoria: '',\r\n        subcategoria: '',\r\n        producto: '',\r\n        unidad: '',\r\n        requeridos: 0,\r\n        anotaciones: '',\r\n        eliminar: ''\r\n    })\r\n    const [ rows, guardarRows ] = useState([])\r\n    const [ banddatosapi, guardarBandDatosApi ] = useState(false)\r\n    const [openmodal, setOpenModal] = useState(false)\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n    const [ datosprincipalesobra, guardarDatosPrincipalesObra ] = useState({\r\n        nombreObra: '',\r\n        direccionObra: '',\r\n        dependenciaObra: ''\r\n    })\r\n    const [ erroresdatos, guardarErroresDatos ] = useState({\r\n        errorNombreObra: false,\r\n        errorDireccionObra: false,\r\n        errorDependenciaObra: false\r\n    })\r\n    \r\n    // Destructuring de los state\r\n    const { categoria, subcategoria, producto } = datos\r\n    const { bandError, mensajeError } = error\r\n    const { nombreObra, direccionObra, dependenciaObra } = datosprincipalesobra\r\n    \r\n\r\n    useEffect(() => {        \r\n        const consultarAPI = async () => {\r\n            const resultado = await Axios('https://apicotizacion.herokuapp.com/api/items')\r\n            const res = [...new Set(resultado.data.items.map(e => (e.categoria)))]\r\n            guardarItems(resultado.data.items)\r\n            guardarCategorias(res)\r\n        }\r\n        consultarAPI()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(rows.length === 0){\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n    }, [rows])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.categoria === categoria)\r\n        guardarSubCategorias([...new Set(resultado.map(e => (e.subcategoria)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            subcategoria: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })       \r\n        //eslint-disable-next-line\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.subcategoria === subcategoria)\r\n        guardarProductos([...new Set(resultado.map(e => (e.nombre)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })\r\n        //eslint-disable-next-line\r\n    }, [subcategoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.nombre === producto)\r\n               \r\n        resultado.map(e => (guardarDatos({\r\n               ...datos,\r\n               unidad: e.unidades,\r\n               folioItem: e.folio\r\n            })))\r\n        //eslint-disable-next-line\r\n    }, [producto])\r\n\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            try{\r\n                let materiales = rows\r\n                materiales.map(material => delete material.eliminar)                                \r\n                const objeto = {\r\n                    \"nombre_obra\": nombreObra,\r\n                    \"direccion_obra\": direccionObra,\r\n                    \"dependencia_obra\": dependenciaObra,\r\n                    \"folio_obra\": Math.floor(Math.random() * 10000) + 1,\r\n                    \"creador_obra\": \"quien sabe\",\r\n                    \"materiales_obra\": materiales\r\n                }\r\n                let resultadoAPI = await Axios.post('https://apicotizacion.herokuapp.com/api/obras', {objeto})\r\n                //guardarNumeroComponenteDashboardAdmin(2)\r\n                guardarActualizarCards(Math.floor(Math.random() * 1000) + 1)\r\n                guardarComponenteContx({\r\n                    ...componentecontx,\r\n                    numero_componente: 2\r\n                })\r\n                // guardarComponente({\r\n                //     ...componente,\r\n                //     numero_componente: 2\r\n                // })\r\n                \r\n            }catch(err){\r\n                guardarBandDatosApi(false)\r\n                alert(\"La obra ya ha sido registrada\")\r\n            }\r\n        }\r\n        if(banddatosapi && rows.length > 0){\r\n            consultarAPI()\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [banddatosapi])\r\n\r\n      \r\n    const registrar = () => {\r\n        if (nombreObra.trim() === ''){            \r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorNombreObra: true\r\n            })\r\n            return\r\n        }\r\n        \r\n        if (direccionObra.trim() === ''){\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorNombreObra: false,\r\n                errorDireccionObra: true\r\n            })\r\n            return\r\n        }\r\n        if (dependenciaObra.trim() === '') {\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorDireccionObra: false,\r\n                errorDependenciaObra: true\r\n            })\r\n            return\r\n        }\r\n        guardarErroresDatos({\r\n            ...erroresdatos,\r\n            errorNombreObra: false,\r\n            errorDireccionObra: false,\r\n            errorDependenciaObra: false\r\n        })\r\n        \r\n        setOpenModal(true)\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <CssBaseline />      \r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Registro de Obras\r\n                    </Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    { bandError ? <Error mensaje={mensajeError}/> : null }\r\n                    <br/>\r\n                    <DatosPrincipalesObrasAdmin\r\n                        datosprincipalesobra={datosprincipalesobra}\r\n                        guardarDatosPrincipalesObra={guardarDatosPrincipalesObra}\r\n                        erroresdatos={erroresdatos}\r\n                        guardarErroresDatos={guardarErroresDatos}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <FormularioRegistroObrasAdmin\r\n                        datos={datos}\r\n                        guardarDatos={guardarDatos}\r\n                        guardarError={guardarError}\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                        categorias={categorias}\r\n                        subcategorias={subcategorias}\r\n                        productos={productos}\r\n                        classes={classes}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <TablaObrasAdmin\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                    />\r\n                    <br/>\r\n                    <Grid container justify=\"flex-end\" spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            <Button \r\n                                className={classes.btnregistrar}\r\n                                disabled={bandbotonregistrar}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={registrar}\r\n                                dir=\"rtl\"\r\n                            >Registrar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Modal\r\n                        openmodal={openmodal}\r\n                        setOpenModal={setOpenModal}\r\n                        guardarBandDatosApi={guardarBandDatosApi}\r\n                    />\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default CrearObraAdmin;","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ObrasCreadasAdmin.js",[],["189","190"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ListItemsAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\PerfilAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\TablaObrasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ListItemsProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\PerfilProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Checkout.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosFiscales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Resumen.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosPersonales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\DatosBancarios.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\registro\\Botones.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ObrasDisponiblesProv.js",["191"],"import { useState, useEffect, Fragment, useContext } from 'react';\r\nimport { makeStyles, CssBaseline, Typography, Paper } from '@material-ui/core/';\r\nimport axios from 'axios'\r\nimport Copyright from '../Copyright'\r\nimport CardObraDisponible from './CardObraDisponible'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({   \r\n   \r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    }\r\n}))\r\n\r\nconst ObrasDisponiblesProv = ( { guardarObra } ) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const [ obrasdisponibles, guardarObrasDisponibles ] = useState([])\r\n    const [ rows, guardarRows ] = useState([])\r\n\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            const respuesta = await axios.get('https://apicotizacion.herokuapp.com/api/obras')\r\n            const obras = respuesta.data.Obras.map(obra => (\r\n                {\r\n                    folioObra: obra.folio_obra,\r\n                    nombreObra: obra.nombre_obra                    \r\n                }\r\n            ))\r\n            guardarObrasDisponibles(respuesta.data.Obras)\r\n            guardarRows(obras);\r\n        }\r\n        consultarAPI()\r\n    }, [])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Obras Disponibles\r\n                    </Typography>\r\n                    <br/>\r\n                    <CardObraDisponible\r\n                        rows={rows}\r\n                        obrasdisponibles={obrasdisponibles}\r\n                        guardarObra={guardarObra}\r\n                        //guardarComponente={guardarComponente}\r\n                        //componente={componente}\r\n                    />\r\n                </Paper>\r\n            </main>\r\n            <Copyright/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ObrasDisponiblesProv;","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\ObrasCotizadasProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\FormularioRegistroObrasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\CotizarObraProv.js",["192"],"import { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { makeStyles, CssBaseline, Paper, Button, Typography, Grid } from '@material-ui/core';\r\nimport Axios from 'axios'\r\nimport jwt_decode from 'jwt-decode'\r\nimport Copyright from '../Copyright'\r\nimport TablaObraProv from './TablaObraProv'\r\nimport Error from '../Error'\r\nimport Modal from '../Modal'\r\nimport FormularioCotizarObraProv from './FormularioCotizarObraProv'\r\nimport {ComponenteContext} from '../../context/ComponenteContext'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      /*\r\n      [theme.breakpoints.up(1000 + theme.spacing(2) * 2)]: {    \r\n        width: 1000,    \r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n      */\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    btnregistrar: {\r\n        float: 'right'\r\n    },\r\n}));\r\n\r\n\r\nconst CotizarObraProv = ( { obra, guardarActualizarCards } ) => {\r\n    const classes = useStyles();\r\n\r\n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n                \r\n    // Creacion de states\r\n    const [ error, guardarError ] = useState({\r\n        bandError: false,\r\n        mensajeError: ''\r\n    })\r\n    const [ categorias, guardarCategorias] = useState([])\r\n    const [ subcategorias, guardarSubCategorias ] = useState([])\r\n    const [ productos, guardarProductos ] = useState([])\r\n    const [ datos, guardarDatos ] = useState({        \r\n        folioItem: '',\r\n        categoria: '',\r\n        subcategoria: '',\r\n        producto: '',\r\n        unidad: '',\r\n        requeridos: 0,\r\n        preciounitario: '',\r\n        anotaciones: '',\r\n        sostenimiento: 1,\r\n        condiciones: '',\r\n        eliminar: ''\r\n    })\r\n    const [ rows, guardarRows ] = useState([])\r\n    const [ banddatosapi, guardarBandDatosApi ] = useState(false)\r\n    const [openmodal, setOpenModal] = useState(false)\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n    \r\n    // Destructuring de los state\r\n    const { categoria, subcategoria, producto, sostenimiento, condiciones } = datos\r\n    const { bandError, mensajeError } = error\r\n\r\n\r\n    useEffect(() => {     \r\n        \r\n        const consultarAPI = async () => {                \r\n            const res = [...new Set(obra.materiales_obra.map(e => (e.categoria)))]            \r\n            guardarCategorias(res)\r\n        }\r\n        consultarAPI()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(rows.length === 0){\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n    }, [rows])\r\n\r\n    useEffect(() => {   \r\n        try{\r\n            const resultado = obra.materiales_obra.filter(e => e.categoria === categoria) \r\n            guardarSubCategorias([...new Set(resultado.map(e => (e.subcategoria)))]) \r\n            guardarDatos({\r\n                ...datos,\r\n                folioItem: '',\r\n                subcategoria: '',\r\n                producto: '',\r\n                unidad: '',\r\n                requeridos: 0,\r\n                preciounitario: '',\r\n                anotaciones: '',\r\n                eliminar: ''\r\n            })        \r\n        }catch{}\r\n        //eslint-disable-next-line\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        try{\r\n            const resultado = obra.materiales_obra.filter(e => e.subcategoria === subcategoria)        \r\n            guardarProductos([...new Set(resultado.map(e => (e.producto)))]) \r\n            guardarDatos({\r\n                ...datos,\r\n                folioItem: '',\r\n                producto: '',\r\n                unidad: '',\r\n                requeridos: 0,\r\n                preciounitario: '',\r\n                anotaciones: '',\r\n                eliminar: ''\r\n            })\r\n        }catch{}\r\n        //eslint-disable-next-line\r\n    }, [subcategoria])\r\n\r\n    useEffect(() => {\r\n        try{\r\n            const resultado = obra.materiales_obra.filter(e => e.producto === producto)\r\n                \r\n            resultado.map(e => (guardarDatos({\r\n                ...datos,\r\n                folioItem: e.folioItem,\r\n                unidad: e.unidad,\r\n                requeridos: e.requeridos\r\n                })))\r\n        }catch{}\r\n        //eslint-disable-next-line\r\n    }, [producto])\r\n\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            try{\r\n                \r\n\r\n                let materiales = rows\r\n                materiales.map(material => delete material.eliminar);\r\n\r\n\r\n                const resultado = JSON.parse(localStorage.getItem('jwt'))\r\n                const decoded = jwt_decode(resultado);        \r\n                \r\n                let resultadoAPI = await Axios.post('https://apicotizacion.herokuapp.com/api/cotizaciones', {                    \r\n                    \"nombre_obra\": obra.nombre_obra,\r\n                    \"folio_obra\": obra.folio_obra,\r\n                    \"folio_cotizacion\": Math.floor(Math.random() * 10000) + 1,\r\n                    \"correo_prov\": decoded.correo,\r\n                    'dias_sostenimiento_propuesta': sostenimiento,\r\n                    'condiciones_comerciales': condiciones,\r\n                    \"materiales_cotizacion\": materiales                    \r\n                })\r\n                //guardarNumeroComponenteDashboardProv(2)\r\n                guardarActualizarCards(Math.floor(Math.random() * 500) + 1)\r\n                guardarComponenteContx({\r\n                    ...componentecontx,\r\n                    numero_componente: 2\r\n                })\r\n                \r\n                /*\r\n\r\n\r\n\r\n                guardarComponente({\r\n                    ...componente,\r\n                    numero_componente: 2\r\n                })\r\n\r\n\r\n\r\n                */\r\n            }catch(err){\r\n                guardarBandDatosApi(false)\r\n                alert(\"La obra ya ha sido registrada\")\r\n            }\r\n        }\r\n\r\n        if(banddatosapi && rows.length > 0){\r\n            consultarAPI()\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [banddatosapi])\r\n\r\n    const registrar = () => {\r\n        if(condiciones.trim() === ''){\r\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\r\n            return\r\n        }\r\n        if(sostenimiento < 1){\r\n            guardarError({ bandError: true, mensajeError: 'Los días de sostenimiento deben ser mayor a 0' })\r\n            return\r\n        }\r\n        guardarError({ bandError: false, mensajeError: '' })\r\n        setOpenModal(true)\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <CssBaseline />      \r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Cotización de Obra\r\n                    </Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    { bandError ? <Error mensaje={mensajeError}/> : null }                    \r\n                    <FormularioCotizarObraProv\r\n                        datos={datos}\r\n                        guardarDatos={guardarDatos}\r\n                        guardarError={guardarError}\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                        categorias={categorias}\r\n                        subcategorias={subcategorias}\r\n                        productos={productos}\r\n                        classes={classes}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <TablaObraProv\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                    />\r\n                    <br/>\r\n                    <Grid container justify=\"flex-end\" spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            <Button \r\n                                className={classes.btnregistrar}\r\n                                disabled={bandbotonregistrar}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={registrar}\r\n                                dir=\"rtl\"\r\n                            >Registrar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Modal\r\n                        openmodal={openmodal}\r\n                        setOpenModal={setOpenModal}\r\n                        guardarBandDatosApi={guardarBandDatosApi}\r\n                    />\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default CotizarObraProv;","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\FormularioCotizarObraProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\TablaObraProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\CardObraDisponible.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\context\\ComponenteContext.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\Obras.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\CardObra.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\DetalleObraCotizadaProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\guardarLS.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\validarDatos.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\createPdf.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\BuscadorObra.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\prov\\DatosPersonales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\ObrasCotizadasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\components\\admin\\DetalleObraAdmin.js",["193"],"import { useState, Fragment, useEffect } from 'react';\r\nimport { makeStyles, Grid, Button, CssBaseline, Typography, Checkbox, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core/';\r\nimport Copyright from '../Copyright'\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        },\r\n        paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n        },\r\n        btnregistrar: {\r\n            float: 'right'\r\n        },  \r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    btn:{\r\n        background: 'linear-gradient(80deg, #212121 40%, #616161 100%)',\r\n        border: 3,\r\n        borderRadius: 6,\r\n        color: 'white',\r\n        height: 30,\r\n        width: '50%',\r\n        cursor: 'pointer',\r\n\r\n        '&:hover': {\r\n        background: 'linear-gradient(80deg, #ab000d 40%, #c4001d 100%)',\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: '15px'\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function DetalleObraAdmin({ obra }) {\r\n\r\n  const columns = [\r\n    { id: 'folioItem', label: 'Folio Item', minWidth: 100 },\r\n    { id: 'categoria', label: 'Categoria', minWidth: 100 },\r\n    {\r\n      id: 'subcategoria',\r\n      label: 'Sub Categoria',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'producto',\r\n      label: 'Producto',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'unidad',\r\n      label: 'Unidad',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'requeridos',\r\n      label: 'Requeridos',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'anotaciones',\r\n      label: 'Anotaciones',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'seleccionar',\r\n      label: 'seleccionar',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    }\r\n  ]\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const [ page, setPage ] = useState(0)\r\n    const [ rowsPerPage, setRowsPerPage ] = useState(10)\r\n    const [ rows, guardarRows ] = useState(obra.materiales_cotizacion)\r\n    const [ checks, guardarChecks ] = useState({})\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n \r\n    useEffect(() => {\r\n        const objeto = {}\r\n        obra.materiales_cotizacion.map(e => (objeto[e.folioItem] = false))\r\n        guardarChecks(objeto)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n  \r\n    useEffect(() => {\r\n        let band = false\r\n        for (const property in checks) {\r\n            if(checks[property]){\r\n                band = true\r\n                break\r\n            }\r\n        }        \r\n        if(band === true){\r\n            guardarBandBotonRegistrar(false)\r\n        }else{\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n\r\n    }, [checks])\r\n\r\n    const registrar = () => {\r\n        \r\n    }\r\n  \r\n\r\n    const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n    };\r\n\r\n  const seleccionarFolio = e => {\r\n    //const dato_eliminado = rows.filter(row => row.folioItem !== e.target.id)\r\n    //guardarRows([...dato_eliminado])    \r\n    guardarChecks({\r\n        ...checks,\r\n        [e.target.id]: e.target.checked\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n        <CssBaseline />      \r\n        <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Requisición de Obras\r\n                </Typography>\r\n                <br/>\r\n                <Paper className={classes.root}>\r\n                    <TableContainer  className={classes.container}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                    return (\r\n                                    <TableRow  hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                        const value = row[column.id]\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                            {\r\n                                                column.id === 'seleccionar'\r\n                                            ?\r\n                                            <Checkbox\r\n                                                checked={checks[row.folioItem]}\r\n                                                id={row.folioItem}\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={seleccionarFolio}\r\n                                            /> : value }\r\n                                            </TableCell>\r\n                                        );\r\n                                        })}\r\n                                    </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <br/>\r\n                <Grid container justify=\"flex-end\" spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Button \r\n                            className={classes.btnregistrar}\r\n                            disabled={bandbotonregistrar}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={registrar}\r\n                            dir=\"rtl\"\r\n                        >Registrar</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Copyright />\r\n        </main>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n*/","C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\docdefinition.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\libs\\createTable.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\cotizacionpala\\src\\images\\logo.js",[],["194","195"],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":19},{"ruleId":"200","severity":1,"message":"204","line":6,"column":22,"nodeType":"202","messageId":"203","endLine":6,"endColumn":28},{"ruleId":"200","severity":1,"message":"205","line":6,"column":68,"nodeType":"202","messageId":"203","endLine":6,"endColumn":72},{"ruleId":"200","severity":1,"message":"206","line":152,"column":26,"nodeType":"202","messageId":"203","endLine":152,"endColumn":46},{"ruleId":"200","severity":1,"message":"207","line":145,"column":21,"nodeType":"202","messageId":"203","endLine":145,"endColumn":33},{"ruleId":"196","replacedBy":"208"},{"ruleId":"198","replacedBy":"209"},{"ruleId":"200","severity":1,"message":"210","line":1,"column":41,"nodeType":"202","messageId":"203","endLine":1,"endColumn":51},{"ruleId":"200","severity":1,"message":"207","line":158,"column":21,"nodeType":"202","messageId":"203","endLine":158,"endColumn":33},{"ruleId":"200","severity":1,"message":"211","line":102,"column":19,"nodeType":"202","messageId":"203","endLine":102,"endColumn":30},{"ruleId":"196","replacedBy":"212"},{"ruleId":"198","replacedBy":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'guardarLS' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'List' is defined but never used.","'guardarCantidadCards' is assigned a value but never used.","'resultadoAPI' is assigned a value but never used.",["214"],["215"],"'useContext' is defined but never used.","'guardarRows' is assigned a value but never used.",["214"],["215"],"no-global-assign","no-unsafe-negation"]